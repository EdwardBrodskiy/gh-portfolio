{"version":3,"sources":["serviceWorker.ts","aboutThisSite/index.tsx","components/DarkMode/index.tsx","components/header/NavItem.tsx","components/header/index.tsx","home/components/repoCardSkeleton.tsx","home/components/repoList.tsx","home/index.tsx","aboutMe/index.tsx","routes.tsx","index.tsx","home/components/repoCard.tsx","components/markDown/snippet.tsx","components/errorBoundary/index.tsx","home/components/error.png"],"names":["Boolean","window","location","hostname","match","AboutThisSite","aboutThisSite","text","DarkModeToggle","useColorMode","colorMode","toggleColorMode","onClick","icon","Moon","Sun","isRound","NavItem","children","m","p","fontSize","Header","useRouteMatch","h","zIndex","bg","light","dark","pos","left","right","top","borderBottomWidth","width","justify","align","w","maxWidth","to","show","aboutMe","RepoCardSkeleton","isRight","height","lg","base","direction","ml","mr","rounded","overflow","transform","mb","noOfLines","spacing","textAlign","RepoList","useState","message","error","setError","isLoaded","setIsLoaded","name","data","setData","useEffect","fetch","then","response","ok","Error","statusText","res","json","result","repoList","repositories","priorityRepos","forEach","repo","excludedRepos","includes","push","md","map","repoName","index","_","Home","as","AboutMe","src","Routes","bgGradient","mx","exact","path","component","from","createBrowserHistory","App","basename","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","RepoCard","content","log","Buffer","toString","objectFit","fallbackSrc","error_image","alt","markDown","href","target","MarkDownSnippet","rest","split","title","first_para","trimed_title","slice","split_first_para","line","ErrorBoundary","props","state","hasError","errorInfo","this","React","Component"],"mappings":"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","file":"static/js/main.e41679e9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Box, Heading, Text } from '@chakra-ui/react'\r\nimport { aboutThisSite } from '../config.json'\r\n\r\nexport function AboutThisSite() {\r\n  return (\r\n    <Box>\r\n      <Heading>About this site</Heading>\r\n      <Text>{aboutThisSite.text}</Text>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { IconButton, useColorMode } from '@chakra-ui/react'\r\nimport { MoonIcon, SunIcon } from '@chakra-ui/icons'\r\n\r\nexport function DarkModeToggle() {\r\n  const { colorMode, toggleColorMode } = useColorMode()\r\n  return (\r\n    <IconButton\r\n      aria-label='change color mode'\r\n      onClick={toggleColorMode}\r\n      icon={colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\r\n      isRound={true}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text } from '@chakra-ui/react'\r\n\r\ntype Props = {\r\n  children: React.ReactElement\r\n}\r\n\r\nexport const NavItem = ({ children }: Props) => {\r\n  return (\r\n    <Text m='auto' p={4} fontSize='lg'>\r\n      {children}\r\n    </Text>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Box, Flex, useColorMode } from '@chakra-ui/react'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport { DarkModeToggle } from '../DarkMode'\r\nimport { NavItem } from './NavItem'\r\nimport { MatchParams } from '../../types'\r\nimport { aboutMe, aboutThisSite } from '../../config.json'\r\n\r\nexport const Header = () => {\r\n  const match = useRouteMatch<MatchParams>()\r\n\r\n  const { colorMode } = useColorMode()\r\n  const bgColor = { light: 'gray.200', dark: 'gray.700' }\r\n  return (\r\n    <Box h='4rem'>\r\n      <Box\r\n        zIndex={1}\r\n        p={4}\r\n        h='4rem'\r\n        bg={bgColor[colorMode]}\r\n        pos={'fixed'}\r\n        left='0'\r\n        right='0'\r\n        top='0'\r\n        borderBottomWidth='1px'\r\n        width='full'\r\n      >\r\n        <Flex justify='space-between' align='center' w='100%' h='100%'>\r\n          <Flex align='center' justify='space-evenly' maxWidth='480px'>\r\n            <NavItem>\r\n              <Link to='/'>Home</Link>\r\n            </NavItem>\r\n            {aboutThisSite.show && (\r\n              <NavItem>\r\n                <Link to='/about-this-site'>About this site</Link>\r\n              </NavItem>\r\n            )}\r\n            {aboutMe.show && (\r\n              <NavItem>\r\n                <Link to='/about-me'>About me</Link>\r\n              </NavItem>\r\n            )}\r\n          </Flex>\r\n          <DarkModeToggle />\r\n        </Flex>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Flex, Skeleton, SkeletonText } from '@chakra-ui/react'\r\n\r\ntype Props = {\r\n  isRight?: Boolean\r\n}\r\n\r\nexport function RepoCardSkeleton({ isRight }: Props) {\r\n  return (\r\n    // <Skeleton\r\n    // {...isRight ? { ml: { lg: '10%', base: '0' } } : { mr: { lg: '10%', base: '0' } }}\r\n    // rounded={20}\r\n    // height='200px'\r\n    // />\r\n    <Flex\r\n      height={{ lg: '18em', base: '' }}\r\n      direction={{ lg: isRight ? 'row-reverse' : 'row', base: 'column' }}\r\n      {...(isRight ? { ml: { lg: '10%', base: '0' } } : { mr: { lg: '10%', base: '0' } })}\r\n      rounded={20}\r\n      overflow='hidden'\r\n    >\r\n      <Skeleton width={{ lg: '40%', base: '100%' }} height='100%' />\r\n      <Flex\r\n        p={4}\r\n        direction='column'\r\n        justify='space-between'\r\n        w='100%'\r\n        transform={{ lg: isRight ? 'scaleX(-1)' : 'none' }}\r\n      >\r\n        <Skeleton height='20px' width='20rem' right={0} mb={4} />\r\n        <SkeletonText noOfLines={6} spacing='4' textAlign={{ lg: isRight ? 'right' : 'left' }} />\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { List, ListItem, Text } from '@chakra-ui/react'\r\nimport { RepoCard } from './repoCard'\r\nimport { repositories } from '../../config.json'\r\nimport { RepoCardSkeleton } from './repoCardSkeleton'\r\n\r\nexport function RepoList() {\r\n  const [error, setError] = useState({ message: '' })\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [data, setData] = useState([{ name: '' }])\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.github.com/users/EdwardBrodskiy/repos')\r\n      .then(function (response) {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response\r\n      })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true)\r\n          setData(result)\r\n        },\r\n        (error) => {\r\n          setError(error)\r\n          setIsLoaded(true)\r\n        },\r\n      )\r\n  }, [])\r\n\r\n  if (error.message !== '') {\r\n    return <Text>Error: {error.message}</Text>\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <List spacing={{ base: 4, md: 8 }}>\r\n        {[0, 0, 0, 0, 0].map((_, index) => (\r\n          <ListItem key={index}>\r\n            <RepoCardSkeleton isRight={!!(index % 2)} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )\r\n  } else {\r\n    let repoList = repositories.priorityRepos\r\n    data.forEach((repo) => {\r\n      if (\r\n        !repositories.excludedRepos.includes(repo.name) &&\r\n        !repoList.includes(repo.name) &&\r\n        repo.name !== ''\r\n      ) {\r\n        repoList.push(repo.name)\r\n      }\r\n    })\r\n    return (\r\n      <List spacing={{ base: 4, md: 8 }}>\r\n        {repoList.map((repoName, index) => (\r\n          <ListItem key={repoName}>\r\n            <RepoCard repoName={repoName} isRight={!!(index % 2)} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Box, Heading } from '@chakra-ui/react'\r\nimport { RepoList } from './components/repoList'\r\n\r\nexport function Home() {\r\n  return (\r\n    <Box>\r\n      <Heading as='h1' mb={4}>\r\n        My Public Repositories\r\n      </Heading>\r\n\r\n      <RepoList />\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Box, Text, Heading, Image } from '@chakra-ui/react'\r\n\r\nexport function AboutMe() {\r\n  return (\r\n    <Box>\r\n      <Heading>A Bit About Me</Heading>\r\n      <Box>\r\n        <Image src='https://github.com/EdwardBrodskiy/MandelBrotSet/raw/master/sample-images/buddah%201080%20layered.png' />\r\n\r\n        <Text>\r\n          My name is Edvard Brodskiy I am currently studying Computer Science at Queen Mary\r\n          University of London. My Interest in the subject began when I was first introduced to\r\n          programing at the start of my Computer Science GCSE since then it has been a growing\r\n          passion one of my first big projects was a an ai that learned to play a modified version\r\n          of the game Snake this really started my interest for AI systems and has enhanced my\r\n          interest in Computer Science as well as this I have written many smaller projects\r\n          demonstrating mathematical phenomena such as certain outputs of the chaos game and polar\r\n          equations all of which are visible on my GitHub account. However, my interest in Computer\r\n          Science doesn’t solely come from the prior mentioned topics but also from the maths I have\r\n          done in school and how well it coincides with the fundamental algorithms in Computer\r\n          Science. On the topic of my hobbies I have found my passion in fencing which I have\r\n          enjoyed so much as to make it the main sport that I do at University.\r\n        </Text>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box } from '@chakra-ui/react'\r\nimport React from 'react'\r\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom'\r\nimport { AboutThisSite } from './aboutThisSite'\r\nimport { Header } from './components/header'\r\nimport { Home } from './home'\r\nimport { AboutMe } from './aboutMe'\r\nimport { MatchParams } from './types'\r\nimport { aboutMe, aboutThisSite } from './config.json'\r\n\r\nconst Routes = () => {\r\n  const match = useRouteMatch<MatchParams>()\r\n  return (\r\n    <Box bgGradient='linear(to-r, blue.200, grey.500)'>\r\n      <Header />\r\n      <Box m={4} mx={{ base: '5%', md: '10%' }}>\r\n        <Switch>\r\n          <Route exact key='route-home' path='/' component={Home} />\r\n          {aboutThisSite.show && (\r\n            <Route\r\n              exact\r\n              key='route-about-this-site'\r\n              path='/about-this-site'\r\n              component={AboutThisSite}\r\n            />\r\n          )}\r\n          {aboutMe.show && (\r\n            <Route exact key='route-about-me' path='/about-me' component={AboutMe} />\r\n          )}\r\n          <Redirect from='*' to='/' /> {/* TODO: add 404 page instead */}\r\n        </Switch>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './App.css'\r\nimport { CSSReset, ChakraProvider } from '@chakra-ui/react'\r\nimport Routes from './routes'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nfunction App() {\r\n  return (\r\n    <ChakraProvider>\r\n      <CSSReset />\r\n      <HashRouter basename='/'>\r\n        <Routes />\r\n      </HashRouter>\r\n    </ChakraProvider>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Text, Image, Flex, useColorMode, Link, Button, Box, Skeleton } from '@chakra-ui/react'\r\nimport { MarkDownSnippet } from '../../components/markDown/snippet'\r\nimport { ErrorBoundary } from '../../components/errorBoundary'\r\nimport error_image from './error.png'\r\n\r\ntype Props = {\r\n  repoName: String\r\n  isRight?: Boolean\r\n}\r\n\r\nexport function RepoCard({ repoName, isRight }: Props) {\r\n  const [error, setError] = useState({ message: '' })\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [data, setData] = useState({ content: '' })\r\n\r\n  const { colorMode } = useColorMode()\r\n  const bgColor = { light: 'gray.200', dark: 'gray.700' }\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.github.com/repos/EdwardBrodskiy/${repoName}/contents/README.md`)\r\n      .then(function (response) {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText)\r\n        }\r\n        return response\r\n      })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setData(result)\r\n          setIsLoaded(true)\r\n        },\r\n        (error) => {\r\n          console.log('error caught')\r\n          setError(error)\r\n          setIsLoaded(true)\r\n        },\r\n      )\r\n  }, [repoName])\r\n\r\n  if (error.message !== '') {\r\n    return <Text>Error: {error.message}</Text>\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <Skeleton\r\n        {...(isRight ? { ml: { lg: '10%', base: '0' } } : { mr: { lg: '10%', base: '0' } })}\r\n        rounded={20}\r\n      />\r\n    )\r\n  } else {\r\n    let buff = Buffer.from(data.content, 'base64')\r\n    let text = buff.toString('ascii')\r\n\r\n    return (\r\n      <Flex\r\n        height={{ lg: '18em', base: '' }}\r\n        direction={{ lg: isRight ? 'row-reverse' : 'row', base: 'column' }}\r\n        {...(isRight ? { ml: { lg: '10%', base: '0' } } : { mr: { lg: '10%', base: '0' } })}\r\n        rounded={20}\r\n        overflow='hidden'\r\n        bg={bgColor[colorMode]}\r\n      >\r\n        <Image\r\n          width={{ lg: '40%', base: '100%' }}\r\n          objectFit='cover'\r\n          src={`https://github.com/EdwardBrodskiy/${repoName}/raw/master/sample-images/preview.jpg`}\r\n          fallbackSrc={error_image}\r\n          alt={`Preview for ${repoName}`}\r\n        />\r\n        <Flex\r\n          p={4}\r\n          textAlign={{ lg: isRight ? 'right' : 'left' }}\r\n          direction='column'\r\n          justify='space-between'\r\n          w='100%'\r\n        >\r\n          <ErrorBoundary>\r\n            <MarkDownSnippet markDown={text} />\r\n          </ErrorBoundary>\r\n          <Box textAlign={{ lg: !isRight ? 'right' : 'left', base: 'right' }}>\r\n            <Link href={`https://github.com/EdwardBrodskiy/${repoName}`} target='_blank'>\r\n              <Button>See Repository</Button>\r\n            </Link>\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps, Heading, Text } from '@chakra-ui/react'\r\n\r\ntype Props = {\r\n  markDown: String\r\n}\r\n\r\nexport function MarkDownSnippet({ markDown, ...rest }: Props & BoxProps) {\r\n  const [title, first_para] = markDown.split('\\n\\n')\r\n\r\n  const trimed_title = title.slice(2)\r\n\r\n  const split_first_para = first_para.split('\\n')\r\n\r\n  return (\r\n    <Box {...rest}>\r\n      <Heading>{trimed_title}</Heading>\r\n      {split_first_para.map((line, index) => (\r\n        <Text key={index}>{line}</Text>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport class ErrorBoundary extends React.Component<{}, { hasError: boolean }> {\r\n  constructor(props: Readonly<{}>) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: any) {}\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/error.673ea911.png\";"],"sourceRoot":""}